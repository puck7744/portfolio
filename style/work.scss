#work {
  //Gradient header
  &:before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: $menu-height;
    background: $primary;
    @include background-gradient($primary, lighten($primary, 5%));
  }
}

//Main content area
.ts-work-content {
  position: absolute;
  top: $menu-height;
  left: 0;
  right: 0;
  bottom: 0;

  //Common styles for both halfs of an entry
  .ts-work-visual, .ts-work-info {
    position: absolute;
    top: 50%;
    width: 25%;
    opacity: 0;
  }

  //Image half
  .ts-work-visual {
    right: 50%;
    margin-right: 2em;
    //Vertically center, then add perspective
    @include transform(translateY(-50%) perspective(600px) rotateY(15deg));

    .ts-work-browser {
      height: 0;
      padding-bottom: 120%;
      background: #fff;
      border: 4px solid darken($background, 40%);
      overflow: hidden;

      .ts-work-titlebar {
        height: 1.2em;
        background: darken($background, 40%);

        span {
          display: block;
          float: right;
          width: 0.8em;
          line-height: 1.2em;
          color: $background;
          margin-left: 0.5em;
          @include box-sizing();
        }

        span:nth-child(2) {
          height: 0.8em;
          line-height: 0.8em;
          margin-top: 0.1em;
          border: 1px solid $background;
          border-top: 3px solid $background;
        }
      }

      img {
        width: 100%;
      }
    }
    .ts-work-shadow {
      height: 10px;
      background: transparent;
      margin: -1em auto 3em;
      @include border-radius(50%);
      @include box-shadow(0, 3em, 30px, rgba(0, 0, 0, 0.5));
    }
  }

  //Text half
  .ts-work-info {
    left: 50%;
    height: 70%;
    margin-left: 2em;
    overflow: auto;
    @include transform(translateY(-50%));
    z-index: 0;

    .ts-work-visit {
      display: inline-block;
      font-size: 120%;
      background: $highlight;
      padding: 0.5em 2.5em;
      margin-top: 1em;
      @include border-radius();

      &:hover {
        background: lighten($highlight, 10%);
        text-decoration: none;
      }
    }
  }

  .ts-work-prev, .ts-work-next {
    display: none;
    position: absolute;
    top: 50%;
    margin-top: -1em;

    a {
      padding: 2em 1em;
      background: darken($background, 25%);

      &:after {
        content: '';
        display: block;
        position: absolute;
        top: 50%;
        left: 50%;
        border: 12px solid transparent;
      }
    }
  }

  .ts-work-prev {
    left: 0;

    a:after {
      border-right: 12px solid lighten($black, 20%);
      margin: -12px 0 0 -20px;
    }
  }
  .ts-work-next {
    right: 0;

    a:after {
      border-left: 12px solid lighten($black, 20%);
      margin: -12px 0 0 -4px;
    }
  }

  //As a last resort show the last entry when there is no target
  &:target, &:last-child {
    z-index: 60;

    .ts-work-visual, .ts-work-info {
      opacity: 1;
      animation: ts-work-in;
    }

    .ts-work-next, .ts-work-prev {
      display: block;
    }
  }

  //Hide the last entry when there is a target
  &:target ~ &:last-child {
    z-index: 0;

    .ts-work-visual, .ts-work-info {
      opacity: 0;
    }

    .ts-work-next, .ts-work-prev {
      display: none;
    }
  }

  // Animations
  &:not(:target) {
    .ts-work-visual {
      animation: ts-carousel-out-r 0.7s 1;
    }

    .ts-work-info {
      animation: ts-slide-out 0.7s 1;
    }
  }

  &:target {
    .ts-work-visual {
      animation: ts-carousel-in-r 0.7s 1;
    }

    .ts-work-info {
      animation: ts-slide-in 0.7s 1;
    }
  }
}

@keyframes ts-carousel-out-r {
  from {
    @include transform(translateY(-50%) perspective(600px) translate3d(0, 0, 0) rotateY(15deg));
    @include opacity(1);
  }
  to {
    @include transform(translateY(-50%) perspective(600px) translate3d(75%, 0, -100px) rotateY(7deg));
    @include opacity(0);
  }
}

@keyframes ts-carousel-in-r {
  from {
    @include transform(translateY(-50%) perspective(600px) translate3d(-50%, 0, 150px) rotateY(27deg));
    @include opacity(0);
  }
  to {
    @include transform(translateY(-50%) perspective(600px) translate3d(0, 0, 0) rotateY(15deg));
    @include opacity(1);
  }
}

@keyframes ts-slide-out {
  from {
    @include transform(translateY(-50%));
    @include opacity(1);
  }
  to {
    @include transform(translateY(-30%));
    @include opacity(0);
  }
}

@keyframes ts-slide-in {
  from {
    @include transform(translateY(-70%));
    @include opacity(0);
  }
  to {
    @include transform(translateY(-50%));
    @include opacity(1);
  }
}
